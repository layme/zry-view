(window['webpackJsonp'] = window['webpackJsonp'] || []).push([['chunk-dedde218'], { '2c89': function (e, t, o) {}, '39cf': function (e, t, o) { 'use strict'; var n = o('2c89'), a = o.n(n); a.a }, 4958: function (e, t, o) { 'use strict'; o.d(t, 'e', function () { return a }), o.d(t, 'k', function () { return r }), o.d(t, 'c', function () { return i }), o.d(t, 'h', function () { return s }), o.d(t, 'f', function () { return c }), o.d(t, 'b', function () { return l }), o.d(t, 'g', function () { return u }), o.d(t, 'i', function () { return m }), o.d(t, 'a', function () { return b }), o.d(t, 'd', function () { return d }), o.d(t, 'j', function () { return p }); var n = o('6b6c'), a = function (e) { return n['a'].request({ url: '/socialContact/getGroupsByProjectBid.action', method: 'post', data: e }) }, r = function (e) { return n['a'].request({ url: '/socialContact/updateGroupByGroupId.action', method: 'post', data: e }) }, i = function (e) { return n['a'].request({ url: '/socialContact/createGroup.action', method: 'post', data: e }) }, s = function (e) { return n['a'].request({ url: '/socialContact/removeGroupByGroupId.action', method: 'post', data: e }) }, c = function (e) { return n['a'].request({ url: '/socialContact/getMembersByGroupBid.action', method: 'post', data: e }) }, l = function (e) { return n['a'].request({ url: '/socialContact/addGagMember.action', method: 'post', data: e }) }, u = function (e) { return n['a'].request({ url: '/socialContact/removeGagMember.action', method: 'post', data: e }) }, m = function (e) { return n['a'].request({ url: '/socialContact/removeGroupMembers.action', method: 'post', data: e }) }, b = function (e) { return n['a'].request({ url: '/socialContact/addAdminMember.action', method: 'post', data: e }) }, d = function (e) { return n['a'].request({ url: '/socialContact/deleteAdminMember.action', method: 'post', data: e }) }, p = function (e) { return n['a'].request({ url: '/socialContact/transferGroup.action', method: 'post', data: e }) } }, 5425: function (e, t, o) {}, '55ff': function (e, t, o) { 'use strict'; var n = o('5425'), a = o.n(n); a.a }, e3c9: function (e, t, o) { 'use strict'; o.r(t); var n = function () { var e = this, t = e.$createElement, o = e._self._c || t; return o('div', [o('chat-member-form', { attrs: { groupName: e.groupName }, on: { search: e.listChatMember, join: e.handleJoin } }), o('Table', { staticClass: 'my-table', attrs: { stripe: '', columns: e.columns, data: e.chatList, loading: e.loading }, scopedSlots: e._u([{ key: 'userInfo', fn: function (t) { var n = t.row; return [o('a', { on: { click: function (t) { e.openGuest(n) } } }, [e._v('查看')])] } }, { key: 'memberRole', fn: function (t) { var n = t.row; return [o('div', [e._v(e._s(e._f('roleFilter')(n.memberRole)))])] } }, { key: 'memberStatus', fn: function (t) { var n = t.row; return [o('div', [e._v(e._s(e._f('userStatusFilter')(n.memberStatu)))])] } }, { key: 'action', fn: function (t) { var n = t.row; return [n.memberRole === 0 ? [n.memberStatu === 0 ? o('a', { staticClass: 'my-btn', on: { click: function (t) { e.confirmAddGagMember(n) } } }, [e._v('禁言')]) : o('a', { staticClass: 'my-btn', on: { click: function (t) { e.confirmRemoveGagMember(n) } } }, [e._v('解禁')]), o('a', { staticClass: 'my-btn', style: { color: '#ed4014' }, on: { click: function (t) { e.confirmRemoveMember(n) } } }, [e._v('踢出')]), n.memberRole === 0 && n.memberStatu === 0 ? o('a', { on: { click: function (t) { e.confirmAddAdminMember(n) } } }, [e._v('设为管理员')]) : e._e()] : n.memberRole === 1 ? [o('a', { staticClass: 'my-btn', on: { click: function (t) { e.confirmDeleteAdminMember(n) } } }, [e._v('取消管理员')]), o('a', { on: { click: function (t) { e.confirmTransferGroup(n) } } }, [e._v('成为群主')])] : [o('span', [e._v('-')])]] } }]) }), o('Page', { staticClass: 'my-page', attrs: { total: e.total, 'show-total': '', current: e.paramDto.page, 'page-size': e.paramDto.limit }, on: { 'update:current': function (t) { e.$set(e.paramDto, 'page', t) }, 'on-change': e.handlePageChange } }), o('Modal', { attrs: { title: '加入群聊', loading: e.joinLoading }, on: { 'on-ok': e.joinGroup }, model: { value: e.joinVisible, callback: function (t) { e.joinVisible = t }, expression: 'joinVisible' } }, [e.joinVisible ? o('Form', { ref: 'joinForm', attrs: { model: e.joinDto, rules: e.joinRules, 'label-width': 80 } }, [o('FormItem', { attrs: { label: '用户手机', prop: 'customerMobile' } }, [o('Input', { attrs: { placeholder: '', clearable: '' }, model: { value: e.joinDto.customerMobile, callback: function (t) { e.$set(e.joinDto, 'customerMobile', typeof t === 'string' ? t.trim() : t) }, expression: 'joinDto.customerMobile' } })], 1), o('FormItem', { attrs: { label: '用户角色', prop: 'memberRole' } }, [o('Select', { attrs: { placeholder: '请选择', clearable: '' }, model: { value: e.joinDto.memberRole, callback: function (t) { e.$set(e.joinDto, 'memberRole', t) }, expression: 'joinDto.memberRole' } }, e._l(e.memberRoleOptions, function (t) { return o('Option', { key: t.value, attrs: { value: t.value } }, [e._v(e._s(t.label))]) }))], 1)], 1) : e._e()], 1), o('Modal', { attrs: { title: '用户详情', width: '800', 'footer-hide': '' }, model: { value: e.guestVisible, callback: function (t) { e.guestVisible = t }, expression: 'guestVisible' } }, [e.guestVisible ? o('guest-tabs', { attrs: { idNumber: e.idNumber }, on: { close: e.handleClose } }) : e._e()], 1)], 1) }, a = [], r = (o('f751'), o('be94')), i = (o('cadf'), o('551c'), o('097d'), function () { var e = this, t = e.$createElement, o = e._self._c || t; return o('Form', { ref: 'chatForm', attrs: { model: e.paramDto, 'label-width': 100 } }, [o('Row', [o('Col', { attrs: { span: 8 } }, [o('FormItem', { attrs: { label: '当前群聊' } }, [o('Tag', { attrs: { color: 'blue' } }, [e._v(e._s(e.groupName))])], 1)], 1), o('Col', { attrs: { span: 8 } }, [o('FormItem', { attrs: { label: '用户昵称' } }, [o('Input', { attrs: { placeholder: '', clearable: '' }, model: { value: e.paramDto.nickName, callback: function (t) { e.$set(e.paramDto, 'nickName', typeof t === 'string' ? t.trim() : t) }, expression: 'paramDto.nickName' } })], 1)], 1), o('Col', { attrs: { span: 8 } }, [o('FormItem', { attrs: { label: '用户手机' } }, [o('Input', { attrs: { placeholder: '', clearable: '' }, model: { value: e.paramDto.customerMobile, callback: function (t) { e.$set(e.paramDto, 'customerMobile', typeof t === 'string' ? t.trim() : t) }, expression: 'paramDto.customerMobile' } })], 1)], 1)], 1), o('Row', [o('Col', { attrs: { span: 8 } }, [o('FormItem', { attrs: { label: '操作人' } }, [o('Input', { attrs: { placeholder: '', clearable: '' }, model: { value: e.paramDto.opFid, callback: function (t) { e.$set(e.paramDto, 'opFid', typeof t === 'string' ? t.trim() : t) }, expression: 'paramDto.opFid' } })], 1)], 1), o('Col', { attrs: { span: 8 } }, [o('FormItem', { attrs: { label: '用户角色' } }, [o('Select', { attrs: { placeholder: '请选择', clearable: '' }, model: { value: e.paramDto.memberRole, callback: function (t) { e.$set(e.paramDto, 'memberRole', t) }, expression: 'paramDto.memberRole' } }, e._l(e.memberRoleOptions, function (t) { return o('Option', { key: t.value, attrs: { value: t.value } }, [e._v(e._s(t.label))]) }))], 1)], 1), o('Col', { attrs: { span: 8 } }, [o('FormItem', { attrs: { label: '用户状态' } }, [o('Select', { attrs: { placeholder: '请选择', clearable: '' }, model: { value: e.paramDto.memberStatus, callback: function (t) { e.$set(e.paramDto, 'memberStatus', t) }, expression: 'paramDto.memberStatus' } }, e._l(e.memberStatusOptions, function (t) { return o('Option', { key: t.value, attrs: { value: t.value } }, [e._v(e._s(t.label))]) }))], 1)], 1)], 1), o('Row', [o('Col', { attrs: { span: '12' } }, [o('Button', { attrs: { type: 'primary', icon: 'ios-search' }, on: { click: e.submit } }, [e._v(' 查 询')])], 1), o('Col', { staticStyle: { 'text-align': 'right' }, attrs: { span: '12' } }, [o('Button', { attrs: { type: 'primary' }, on: { click: e.join } }, [e._v('加入群聊')])], 1)], 1)], 1) }), s = [], c = { name: 'chatMemberForm', props: { groupName: String }, data: function () { return { paramDto: { nickName: '', customerMobile: '', opFid: '', memberRole: '', memberStatus: '' }, memberRoleOptions: [{ label: '普通成员', value: 0 }, { label: '管理员', value: 1 }, { label: '群主', value: 2 }], memberStatusOptions: [{ label: '已入群', value: 0 }, { label: '已禁言', value: 1 }] } }, methods: { submit: function () { this.$emit('search', this.paramDto) }, join: function () { this.$emit('join') } }, created: function () { this.submit() } }, l = c, u = (o('39cf'), o('2877')), m = Object(u['a'])(l, i, s, !1, null, '0aabea07', null); m.options.__file = 'chatMemberForm.vue'; var b = m.exports, d = o('6942'), p = o('4958'), f = o('2f62'), h = { name: 'chatMemberList', components: { chatMemberForm: b, guestTabs: d['a'] }, data: function () { return { loading: !1, groupName: '', paramDto: { groupId: '', page: 1, limit: 10 }, columns: [{ title: '用户昵称', key: 'memberNickName' }, { title: '用户信息', slot: 'userInfo' }, { title: '用户角色', slot: 'memberRole' }, { title: '用户状态', slot: 'memberStatus' }, { title: '操作', slot: 'action', width: 200 }], chatList: [], total: 0, joinVisible: !1, joinLoading: !0, joinDto: { groupId: '', customerMobile: '', memberRole: '' }, joinRules: { customerMobile: [{ required: !0, message: '请输入用户手机', trigger: 'blur' }, { pattern: /^1\d{10}$/, message: '手机号格式有误', trigger: 'blur' }], memberRole: [{ required: !0, type: 'number', message: '请选择用户角色', trigger: 'change' }] }, memberRoleOptions: [{ label: '普通成员', value: 1 }], guestVisible: !1, idNumber: '' } }, methods: Object(r['a'])({}, Object(f['d'])(['closeTag']), { handleCloseTag: function () { this.closeTag({ name: 'chatMemberList' }) }, listChatMember: function (e) { Object.assign(this.paramDto, e), this.paramDto.page = 1, this.handlePageChange() }, handlePageChange: function () { var e = this; this.loading = !0, this.groupName = this.$route.query.groupName, this.paramDto.groupId = this.$route.query.groupId, this.groupName && this.paramDto.groupId || (this.loading = !1, this.$Message.warning('请通过群列表访问群聊成员页面'), this.handleCloseTag(), this.$router.push({ name: 'home' })), Object(p['f'])(this.paramDto).then(function (t) { e.chatList = t.body.rows, e.total = t.body.total, e.loading = !1 }).catch(function () { e.loading = !1 }) }, handleJoin: function () { this.joinDto.groupId = this.$route.query.groupId, this.joinDto.customerMobile = '', this.joinDto.memberRole = '', this.joinVisible = !0 }, joinGroup: function () { var e = this; this.$refs['joinForm'].validate(function (t) { t ? e.joinVisible = !1 : setTimeout(function () { e.joinLoading = !1, e.$nextTick(function () { e.joinLoading = !0 }) }, 500) }) }, confirmAddGagMember: function (e) { var t = this; this.$Modal.confirm({ title: '通知', content: '<p>确定要禁言 '.concat(e.memberNickName, ' 吗？</p>'), onOk: function () { t.addGagMember(e) }, onCancel: function () {} }) }, addGagMember: function (e) { var t = this, o = { groupId: e.groupId, members: [e.member] }; Object(p['b'])(o).then(function (e) { t.$Message.success('禁言成功'), t.handlePageChange() }) }, confirmRemoveGagMember: function (e) { var t = this; this.$Modal.confirm({ title: '通知', content: '<p>确定要解除 '.concat(e.memberNickName, ' 的禁言吗？</p>'), onOk: function () { t.removeGagMember(e) }, onCancel: function () {} }) }, removeGagMember: function (e) { var t = this, o = { groupId: e.groupId, members: [e.member] }; Object(p['g'])(o).then(function (e) { t.$Message.success('解禁成功'), t.handlePageChange() }) }, confirmRemoveMember: function (e) { var t = this; this.$Modal.confirm({ title: '通知', content: '<p>确定要将 '.concat(e.memberNickName, ' 踢出群聊吗？</p>'), onOk: function () { t.removeMember(e) }, onCancel: function () {} }) }, removeMember: function (e) { var t = this, o = { groupId: e.groupId, members: [e.member] }; Object(p['i'])(o).then(function (e) { t.$Message.success('踢出群聊成功'), t.handlePageChange() }) }, confirmAddAdminMember: function (e) { var t = this; this.$Modal.confirm({ title: '通知', content: '<p>确定要将 '.concat(e.memberNickName, ' 设为管理员吗？</p>'), onOk: function () { t.addAdminMember(e) }, onCancel: function () {} }) }, addAdminMember: function (e) { var t = this, o = { groupId: e.groupId, members: [e.member], memberRole: 1 }; Object(p['a'])(o).then(function (e) { t.$Message.success('管理员设置成功'), t.handlePageChange() }) }, confirmDeleteAdminMember: function (e) { var t = this; this.$Modal.confirm({ title: '通知', content: '<p>确定要取消 '.concat(e.memberNickName, ' 的管理员身份吗？</p>'), onOk: function () { t.deleteAdminMember(e) }, onCancel: function () {} }) }, deleteAdminMember: function (e) { var t = this, o = { groupId: e.groupId, members: [e.member] }; Object(p['d'])(o).then(function (e) { t.$Message.success('管理员取消成功'), t.handlePageChange() }) }, confirmTransferGroup: function (e) { var t = this; this.$Modal.confirm({ title: '通知', content: '<p>确定要将 '.concat(e.memberNickName, ' 设为群主吗？</p><p>老群主将会变成普通成员</p>'), onOk: function () { t.transferGroup(e) }, onCancel: function () {} }) }, transferGroup: function (e) { var t = this, o = { groupId: e.groupId, owner: e.member }; Object(p['j'])(o).then(function (e) { t.$Message.success('群主转移成功'), t.handlePageChange() }) }, openGuest: function (e) { this.idNumber = e.member, this.guestVisible = !0 }, handleClose: function () { this.guestVisible = !1 } }), watch: { $route: function (e, t) { this.handlePageChange() } }, filters: { roleFilter: function (e) { return e === 0 ? '普通成员' : e === 1 ? '管理员' : e === 2 ? '群主' : void 0 }, userStatusFilter: function (e) { return e === 0 ? '已入群' : e === 1 ? '已禁言' : void 0 } } }, g = h, v = (o('55ff'), Object(u['a'])(g, n, a, !1, null, '326ac30b', null)); v.options.__file = 'chatMemberList.vue'; t['default'] = v.exports } }])
